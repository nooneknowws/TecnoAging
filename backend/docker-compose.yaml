

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  postgres:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "15432:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
    networks:
      - postgres-network
    restart: unless-stopped

  mongodb:
    image: mongo:6.0
    container_name: auth_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  saga-service:
    build:
      context: . # Changed context to the root of the project
      dockerfile: _SAGA/SAGA/Dockerfile # Specify Dockerfile path relative to new context
    ports:
      - "5010:5010"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - postgres-network
    restart: unless-stopped

  paciente-service:
    build:
      context: . # Changed context to the root of the project
      dockerfile: _pacientes/Pacientes/Dockerfile # Specify Dockerfile path relative to new context
    ports:
      - "5006:5006"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db-pacientes
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      saga-service:
        condition: service_started
    networks:
      - postgres-network
    restart: unless-stopped

  tecnico-service:
    build:
      context: . # Changed context to the root of the project
      dockerfile: _tecnicos/Tecnicos/Dockerfile # Specify Dockerfile path relative to new context
    ports:
      - "5005:5005"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db-tecnicos
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      saga-service:
        condition: service_started
    networks:
      - postgres-network
    restart: unless-stopped

  forms-service:
    build:
      context: . # Changed context to the root of the project
      dockerfile: _forms/Forms/Dockerfile # Specify Dockerfile path relative to new context
    ports:
      - "5001:5001"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db-forms
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      saga-service:
        condition: service_started
    networks:
      - postgres-network
    restart: unless-stopped

  auth-service:
    build:
      context: . # Changed context to the root of the project
      dockerfile: _auth/Auth/Dockerfile # Specify Dockerfile path relative to new context
    ports:
      - "5000:5000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://admin:admin@mongodb:27017/auth_db?authSource=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      saga-service:
        condition: service_started
    networks:
      - postgres-network
    restart: unless-stopped

  avaliacoes-service:
    build:
      context: . # Changed context to the root of the project
      dockerfile: _avaliacoes/Avaliacoes/Dockerfile # Specify Dockerfile path relative to new context
    ports:
      - "5002:5002"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db-avaliacoes
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      saga-service:
        condition: service_started
    networks:
      - postgres-network
    restart: unless-stopped

  analises-service:
    build:
      context: . # Changed context to the root of the project
      dockerfile: _analises/Analises/Dockerfile # Specify Dockerfile path relative to new context
    ports:
      - "5003:5003"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db-analises
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      saga-service:
        condition: service_started
    networks:
      - postgres-network
    restart: unless-stopped

  testes-service:
    build:
      context: . # Changed context to the root of the project
      dockerfile: _testes/Testes/Dockerfile # Specify Dockerfile path relative to new context
    ports:
      - "5004:5004"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db-testes
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      saga-service:
        condition: service_started
    networks:
      - postgres-network
    restart: unless-stopped

  gateway:
    build:
      context: ./_gateway # Reverted context
      dockerfile: Dockerfile # Reverted Dockerfile path
    ports:
      - "3000:3000"
    env_file:
      - ./_gateway/.env
    depends_on:
      - paciente-service
      - tecnico-service
      - forms-service
      - auth-service
      - avaliacoes-service
      - analises-service
      - testes-service
    networks:
      - postgres-network
    restart: unless-stopped

volumes:
  postgres_data:
  mongo_data:

networks:
  postgres-network:
    driver: bridge
